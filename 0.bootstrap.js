(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../ultimate-tic-tac-toe-wasm/pkg sync recursive":
/*!*********************************************!*\
  !*** ../ultimate-tic-tac-toe-wasm/pkg sync ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../ultimate-tic-tac-toe-wasm/pkg sync recursive\";\n\n//# sourceURL=webpack:///../ultimate-tic-tac-toe-wasm/pkg_sync?");

/***/ }),

/***/ "../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js":
/*!*********************************************************************!*\
  !*** ../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js ***!
  \*********************************************************************/
/*! exports provided: Board, GlobalLocal, __wbindgen_object_drop_ref, __wbg_randomFillSync_1b52c8482374c55b, __wbg_getRandomValues_1ef11e888e5228e9, __wbg_new_3a746f2619705add, __wbg_call_f54d3a6dadb199ca, __wbindgen_jsval_eq, __wbg_self_ac379e780a0d8b94, __wbg_crypto_1e4302b85d4f64a2, __wbindgen_is_undefined, __wbg_getRandomValues_1b4ba144162a5c9e, __wbg_require_6461b1e9a0d7c34a, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Board\", function() { return Board; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GlobalLocal\", function() { return GlobalLocal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_randomFillSync_1b52c8482374c55b\", function() { return __wbg_randomFillSync_1b52c8482374c55b; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_1ef11e888e5228e9\", function() { return __wbg_getRandomValues_1ef11e888e5228e9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_3a746f2619705add\", function() { return __wbg_new_3a746f2619705add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_f54d3a6dadb199ca\", function() { return __wbg_call_f54d3a6dadb199ca; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_jsval_eq\", function() { return __wbindgen_jsval_eq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_self_ac379e780a0d8b94\", function() { return __wbg_self_ac379e780a0d8b94; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_crypto_1e4302b85d4f64a2\", function() { return __wbg_crypto_1e4302b85d4f64a2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_undefined\", function() { return __wbindgen_is_undefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_1b4ba144162a5c9e\", function() { return __wbg_getRandomValues_1b4ba144162a5c9e; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_require_6461b1e9a0d7c34a\", function() { return __wbg_require_6461b1e9a0d7c34a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ultimate_tic_tac_toe_wasm_bg.wasm */ \"../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm\");\n\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nclass Board {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Board.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_board_free\"](ptr);\n    }\n    /**\n    * @returns {Board}\n    */\n    static new() {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_new\"]();\n        return Board.__wrap(ret);\n    }\n    /**\n    * @param {number} global\n    * @param {number} local\n    * @returns {boolean}\n    */\n    canPlayAt(global, local) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_canPlayAt\"](this.ptr, global, local);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} global\n    * @returns {number}\n    */\n    whoGotGlobal(global) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_whoGotGlobal\"](this.ptr, global);\n        return ret;\n    }\n    /**\n    * @param {number} global\n    * @param {number} local\n    * @returns {number}\n    */\n    whoGot(global, local) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_whoGot\"](this.ptr, global, local);\n        return ret;\n    }\n    /**\n    * @param {number} pos\n    * @returns {boolean}\n    */\n    isLegalGlobal(pos) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_isLegalGlobal\"](this.ptr, pos);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} global\n    * @param {number} local\n    * @returns {number}\n    */\n    playAt(global, local) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_playAt\"](this.ptr, global, local);\n        return ret;\n    }\n    /**\n    * @param {number} maxDepth\n    * @returns {GlobalLocal}\n    */\n    playCpu(maxDepth) {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_playCpu\"](this.ptr, maxDepth);\n        return GlobalLocal.__wrap(ret);\n    }\n}\n/**\n*/\nclass GlobalLocal {\n\n    static __wrap(ptr) {\n        const obj = Object.create(GlobalLocal.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_globallocal_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get global() {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_globallocal_global\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set global(arg0) {\n        _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_globallocal_global\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get local() {\n        const ret = _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_globallocal_local\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set local(arg0) {\n        _ultimate_tic_tac_toe_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_globallocal_local\"](this.ptr, arg0);\n    }\n}\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_randomFillSync_1b52c8482374c55b = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm(arg1, arg2));\n};\n\nconst __wbg_getRandomValues_1ef11e888e5228e9 = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm(arg1, arg2));\n};\n\nconst __wbg_new_3a746f2619705add = function(arg0, arg1) {\n    const ret = new Function(getStringFromWasm(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbg_call_f54d3a6dadb199ca = function(arg0, arg1) {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_jsval_eq = function(arg0, arg1) {\n    const ret = getObject(arg0) === getObject(arg1);\n    return ret;\n};\n\nconst __wbg_self_ac379e780a0d8b94 = function(arg0) {\n    const ret = getObject(arg0).self;\n    return addHeapObject(ret);\n};\n\nconst __wbg_crypto_1e4302b85d4f64a2 = function(arg0) {\n    const ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_is_undefined = function(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nconst __wbg_getRandomValues_1b4ba144162a5c9e = function(arg0) {\n    const ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nconst __wbg_require_6461b1e9a0d7c34a = function(arg0, arg1) {\n    const ret = __webpack_require__(\"../ultimate-tic-tac-toe-wasm/pkg sync recursive\")(getStringFromWasm(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js?");

/***/ }),

/***/ "../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm":
/*!**************************************************************************!*\
  !*** ../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm ***!
  \**************************************************************************/
/*! exports provided: memory, __wbg_board_free, board_new, board_canPlayAt, board_whoGotGlobal, board_whoGot, board_isLegalGlobal, board_playAt, board_playCpu, __wbg_globallocal_free, __wbg_get_globallocal_global, __wbg_set_globallocal_global, __wbg_get_globallocal_local, __wbg_set_globallocal_local */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./ultimate_tic_tac_toe_wasm.js */ \"../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ultimate-tic-tac-toe-wasm */ \"../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js\");\n\r\n\r\nlet canvas = document.getElementById(\"gameCanvas\");\r\nlet depthButton = document.getElementById(\"depthButton\");\r\nlet levelSelect = document.getElementById(\"levelSelect\");\r\nlet ctx = canvas.getContext(\"2d\");\r\nlet boardOffsetTop = 30;\r\nlet boardOffsetLeft = 30;\r\nlet localSize = 30;\r\nlet localPadding = 10;\r\nlet localLineWidth = 5;\r\nlet localGridWidth = 3;\r\nlet globalSize = localSize * 3 + localPadding * 2;\r\nlet globalPadding = 30;\r\nlet globalLineWidth = 16;\r\nlet globalGridWidth = 8;\r\nlet board = ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"Board\"].new();\r\nlet canPlay = true;\r\n\r\nlevelSelect.addEventListener(\"change\", () => {\r\n    console.log(\"CPU level changed to %s\", levelSelect.value);\r\n}, false);\r\n\r\ncanvas.addEventListener(\"click\", (e) => {\r\n    if (!canPlay) { return; }\r\n\r\n    let globalOffsetX = e.offsetX - boardOffsetLeft;\r\n    let globalOffsetY = e.offsetY - boardOffsetTop;\r\n\r\n    let globalRow = Math.floor(globalOffsetY / (globalSize + globalPadding));\r\n    let globalCol = Math.floor(globalOffsetX / (globalSize + globalPadding));\r\n\r\n    let localOffsetX = globalOffsetX - globalCol * (globalSize + globalPadding);\r\n    let localOffsetY = globalOffsetY - globalRow * (globalSize + globalPadding);\r\n\r\n    // グローバルボードのグリッドをクリックしている場合.\r\n    if (localOffsetX > globalSize || localOffsetY > globalSize) { return; }\r\n\r\n    let localRow = Math.floor(localOffsetY / (localSize + localPadding));\r\n    let localCol = Math.floor(localOffsetX / (localSize + localPadding));\r\n\r\n    let cellOffsetX = localOffsetX - localCol * (localSize + localPadding);\r\n    let cellOffsetY = localOffsetY - localRow * (localSize + localPadding);\r\n\r\n    // ローカルボードのグリッドをクリックしている場合.\r\n    if (cellOffsetX > localSize || cellOffsetY > localSize) { return; }\r\n\r\n    if (globalRow  >= 3 || globalCol >= 3 || localRow >= 3 || localCol >= 3) { return; }\r\n\r\n    let global = globalRow * 3 + globalCol;\r\n    let local = localRow * 3 + localCol;\r\n    console.log(\"clicked at (%d, %d), (%d, %d)\", globalCol + 1, globalRow + 1, localCol + 1, localRow + 1);\r\n    if (board.canPlayAt(global, local)) {\r\n        canPlay = false;\r\n        let status = board.playAt(global, local);\r\n        draw();\r\n        if (status != 2) {\r\n            let s = \"\";\r\n            if (status == 1) {\r\n                s = \"あなたの勝ちです。\";\r\n            } else if (status == 0) {\r\n                s = \"引き分けです。\";\r\n            } else {\r\n                s = \"あなたの負けです。\";\r\n            }\r\n            s += \"もう一度プレイしたい場合はブラウザを更新してください。\";\r\n            alert(s);\r\n            return;\r\n        }\r\n\r\n        let pos = board.playCpu(levelSelect.value);\r\n        status = board.playAt(pos.global, pos.local);\r\n        draw();\r\n        if (status != 2) {\r\n            let s = \"\";\r\n            if (status == 1) {\r\n                s = \"あなたの負けです。\";\r\n            } else if (status == 0) {\r\n                s = \"引き分けです。\";\r\n            } else {\r\n                s = \"あなたの勝ちです。\";\r\n            }\r\n            s += \"もう一度プレイしたい場合はブラウザを更新してください。\";\r\n            alert(s);\r\n            return;\r\n        }\r\n        canPlay = true;\r\n    }\r\n}, false);\r\n\r\ndraw();\r\n\r\nfunction drawBoard() {\r\n    console.log(\"draw board\");\r\n    // グローバルボードの枠\r\n    ctx.lineWidth = globalGridWidth;\r\n    ctx.strokeStyle = \"orange\";\r\n    // 横線\r\n    for (let row = 1; row < 3; ++row) {\r\n        let y = boardOffsetTop + (globalSize + globalPadding) * row - globalPadding * 0.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(boardOffsetLeft, y);\r\n        ctx.lineTo(boardOffsetLeft + globalSize * 3 + globalPadding * 2, y);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n    // 縦線\r\n    for (let col = 1; col < 3; ++col) {\r\n        let x = boardOffsetLeft + (globalSize + globalPadding) * col - globalPadding * 0.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, boardOffsetTop);\r\n        ctx.lineTo(x, boardOffsetTop + globalSize * 3 + globalPadding * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    for (let global = 0; global < 9; ++global) {\r\n        let globalRow = Math.floor(global / 3);\r\n        let globalCol = global % 3;\r\n\r\n        let globalX = boardOffsetLeft + (globalSize + globalPadding) * globalCol;\r\n        let globalY = boardOffsetTop + (globalSize + globalPadding) * globalRow;\r\n\r\n        // グローバルボードが取られている場合.\r\n        if (board.whoGotGlobal(global) > 0) {\r\n            ctx.lineWidth = globalLineWidth;\r\n            ctx.strokeStyle = \"orange\";\r\n            ctx.beginPath();\r\n            ctx.moveTo(globalX + globalGridWidth / 2, globalY + globalGridWidth / 2);\r\n            ctx.lineTo(globalX + globalSize - globalGridWidth / 2, globalY + globalSize - globalGridWidth / 2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            ctx.beginPath();\r\n            ctx.moveTo(globalX + globalSize - globalGridWidth / 2, globalY + globalGridWidth / 2);\r\n            ctx.lineTo(globalX + globalGridWidth / 2, globalY + globalSize - globalGridWidth / 2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            continue;\r\n        } else if (board.whoGotGlobal(global) < 0) {\r\n            ctx.lineWidth = globalLineWidth;\r\n            ctx.strokeStyle = \"dodgerblue\";\r\n            ctx.beginPath();\r\n            ctx.arc(globalX + globalSize / 2, globalY + globalSize / 2, (globalSize - globalGridWidth) / 2, 0, Math.PI * 2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            continue;\r\n        }\r\n\r\n        // グローバルボードが取られていない場合.\r\n        const isLegal = board.isLegalGlobal(global);\r\n        ctx.lineWidth = localGridWidth;\r\n        if (isLegal) {\r\n            ctx.strokeStyle = \"white\";\r\n        } else {\r\n            ctx.strokeStyle = \"darkgray\";\r\n        }\r\n        // 横線\r\n        for (let row = 1; row < 3; ++row) {\r\n            let y = globalY + (localSize + localPadding) * row - localPadding / 2;\r\n            ctx.beginPath();\r\n            ctx.moveTo(globalX, y);\r\n            ctx.lineTo(globalX + localSize * 3 + localPadding * 2, y);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n        // 縦線\r\n        for (let col = 1; col < 3; ++col) {\r\n            let x = globalX + (localSize + localPadding) * col - localPadding / 2;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, globalY);\r\n            ctx.lineTo(x, globalY + localSize * 3 + localPadding * 2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n\r\n        // マーク\r\n        ctx.lineWidth = localLineWidth;\r\n        for (let local = 0; local < 9; ++local) {\r\n            let localRow = Math.floor(local / 3);\r\n            let localCol = local % 3;\r\n\r\n            let localX = globalX + (localSize + localPadding) * localCol;\r\n            let localY = globalY + (localSize + localPadding) * localRow;\r\n            if (board.whoGot(global, local) > 0) {\r\n                if (isLegal) {\r\n                    ctx.strokeStyle = \"orange\";\r\n                } else {\r\n                    ctx.strokeStyle = \"#775200\";\r\n                }\r\n                ctx.beginPath();\r\n                ctx.moveTo(localX + localGridWidth / 2, localY + localGridWidth / 2);\r\n                ctx.lineTo(localX + localSize - localGridWidth / 2, localY + localSize - localGridWidth / 2);\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n                ctx.beginPath();\r\n                ctx.moveTo(localX + localSize - localGridWidth / 2, localY + localGridWidth / 2);\r\n                ctx.lineTo(localX + localGridWidth / 2, localY + localSize - localGridWidth / 2);\r\n                ctx.stroke();\r\n                ctx.closePath();\r\n            } else if (board.whoGot(global, local) < 0) {\r\n                if (isLegal) {\r\n                    ctx.strokeStyle = \"dodgerblue\";\r\n                } else {\r\n                    ctx.strokeStyle = \"#0c4877\";\r\n                }\r\n                ctx.beginPath();\r\n                ctx.arc(localX + localSize / 2, localY + localSize / 2, (localSize - localGridWidth) / 2, 0, Math.PI * 2);\r\n                ctx.stroke();\r\n                ctx.closePath()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction draw() {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    drawBoard();\r\n}\r\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);
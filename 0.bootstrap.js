(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js":
/*!*********************************************************************!*\
  !*** ../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js ***!
  \*********************************************************************/
/*! exports provided: newBoard, canPlayAt, whoGotGlobal, whoGot, isLegalGlobal, playAt, setSeed, play, __wbindgen_object_drop_ref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newBoard\", function() { return newBoard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canPlayAt\", function() { return canPlayAt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"whoGotGlobal\", function() { return whoGotGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"whoGot\", function() { return whoGot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLegalGlobal\", function() { return isLegalGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"playAt\", function() { return playAt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSeed\", function() { return setSeed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"play\", function() { return play; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony import */ var _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ultimate_tic_tac_toe_wasm_bg */ \"../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm\");\n\n\n/**\n* @returns {number}\n*/\nfunction newBoard() {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"newBoard\"]();\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @param {number} arg2\n* @returns {number}\n*/\nfunction canPlayAt(arg0, arg1, arg2) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"canPlayAt\"](arg0, arg1, arg2);\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @returns {number}\n*/\nfunction whoGotGlobal(arg0, arg1) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"whoGotGlobal\"](arg0, arg1);\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @param {number} arg2\n* @returns {number}\n*/\nfunction whoGot(arg0, arg1, arg2) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"whoGot\"](arg0, arg1, arg2);\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @returns {number}\n*/\nfunction isLegalGlobal(arg0, arg1) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"isLegalGlobal\"](arg0, arg1);\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @param {number} arg2\n* @returns {number}\n*/\nfunction playAt(arg0, arg1, arg2) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"playAt\"](arg0, arg1, arg2);\n}\n\n/**\n* @param {number} arg0\n* @returns {void}\n*/\nfunction setSeed(arg0) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"setSeed\"](arg0);\n}\n\n/**\n* @param {number} arg0\n* @param {number} arg1\n* @returns {number}\n*/\nfunction play(arg0, arg1) {\n    return _ultimate_tic_tac_toe_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"play\"](arg0, arg1);\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n\n\n//# sourceURL=webpack:///../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js?");

/***/ }),

/***/ "../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm":
/*!**************************************************************************!*\
  !*** ../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm ***!
  \**************************************************************************/
/*! exports provided: memory, newBoard, canPlayAt, whoGotGlobal, whoGot, isLegalGlobal, playAt, setSeed, play */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ultimate-tic-tac-toe-wasm */ \"../ultimate-tic-tac-toe-wasm/pkg/ultimate_tic_tac_toe_wasm.js\");\n\n\nclass Board {\n    constructor() {\n        this.inner = ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"newBoard\"]();\n    }\n\n    canPlayAt(global, local) {\n        return ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"canPlayAt\"](this.inner, global, local);\n    }\n\n    playAt(global, local) {\n        return ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"playAt\"](this.inner, global, local) - 1;\n    }\n\n    whoGotGlobal(pos) {\n        return ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"whoGotGlobal\"](this.inner, pos) - 1;\n    }\n\n    whoGot(global, local) {\n        return ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"whoGot\"](this.inner, global, local) - 1;\n    }\n\n    isLegalGlobal(pos) {\n        return ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"isLegalGlobal\"](this.inner, pos);\n    }\n\n    playCpu() {\n        const pos = ultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"play\"](this.inner, levelSelect.value);\n        const global = pos >> 4;\n        const local = pos & 15;\n        return { global: global, local: local };\n    }\n}\n\nlet canvas = document.getElementById(\"gameCanvas\");\nlet depthButton = document.getElementById(\"depthButton\");\nlet levelSelect = document.getElementById(\"levelSelect\");\nlet ctx = canvas.getContext(\"2d\");\nlet boardOffsetTop = 30;\nlet boardOffsetLeft = 30;\nlet localSize = 30;\nlet localPadding = 10;\nlet localLineWidth = 5;\nlet localGridWidth = 3;\nlet globalSize = localSize * 3 + localPadding * 2;\nlet globalPadding = 30;\nlet globalLineWidth = 16;\nlet globalGridWidth = 8;\nlet board = new Board();\nlet cpuMaxDepth = 1;\nlet canPlay = true;\n\nultimate_tic_tac_toe_wasm__WEBPACK_IMPORTED_MODULE_0__[\"setSeed\"](Number(Date.now()));\n\nlevelSelect.addEventListener(\"change\", () => {\n    console.log(\"CPU level changed to %d\", levelSelect.value);\n}, false);\n\ncanvas.addEventListener(\"click\", (e) => {\n    if (!canPlay) { return; }\n\n    let globalOffsetX = e.offsetX - boardOffsetLeft;\n    let globalOffsetY = e.offsetY - boardOffsetTop;\n\n    let globalRow = Math.floor(globalOffsetY / (globalSize + globalPadding));\n    let globalCol = Math.floor(globalOffsetX / (globalSize + globalPadding));\n\n    let localOffsetX = globalOffsetX - globalCol * (globalSize + globalPadding);\n    let localOffsetY = globalOffsetY - globalRow * (globalSize + globalPadding);\n\n    // グローバルボードのグリッドをクリックしている場合.\n    if (localOffsetX > globalSize || localOffsetY > globalSize) { return; }\n\n    let localRow = Math.floor(localOffsetY / (localSize + localPadding));\n    let localCol = Math.floor(localOffsetX / (localSize + localPadding));\n\n    let cellOffsetX = localOffsetX - localCol * (localSize + localPadding);\n    let cellOffsetY = localOffsetY - localRow * (localSize + localPadding);\n\n    // ローカルボードのグリッドをクリックしている場合.\n    if (cellOffsetX > localSize || cellOffsetY > localSize) { return; }\n\n    if (globalRow  >= 3 || globalCol >= 3 || localRow >= 3 || localCol >= 3) { return; }\n\n    let global = globalRow * 3 + globalCol;\n    let local = localRow * 3 + localCol;\n    console.log(\"clicked at (%d, %d), (%d, %d)\", globalCol + 1, globalRow + 1, localCol + 1, localRow + 1);\n    if (board.canPlayAt(global, local)) {\n        canPlay = false;\n        let status = board.playAt(global, local);\n        draw();\n        if (status != 2) { return; }\n\n        let pos = board.playCpu();\n        status = board.playAt(pos.global, pos.local);\n        draw();\n        if (status != 2) { return; }\n        canPlay = true;\n    }\n}, false);\n\ndraw();\n\nfunction drawBoard() {\n    console.log(\"draw board\");\n    // グローバルボードの枠\n    ctx.lineWidth = globalGridWidth;\n    ctx.strokeStyle = \"orange\";\n    // 横線\n    for (let row = 1; row < 3; ++row) {\n        let y = boardOffsetTop + (globalSize + globalPadding) * row - globalPadding * 0.5;\n        ctx.beginPath();\n        ctx.moveTo(boardOffsetLeft, y);\n        ctx.lineTo(boardOffsetLeft + globalSize * 3 + globalPadding * 2, y);\n        ctx.stroke();\n        ctx.closePath();\n    }\n    // 縦線\n    for (let col = 1; col < 3; ++col) {\n        let x = boardOffsetLeft + (globalSize + globalPadding) * col - globalPadding * 0.5;\n        ctx.beginPath();\n        ctx.moveTo(x, boardOffsetTop);\n        ctx.lineTo(x, boardOffsetTop + globalSize * 3 + globalPadding * 2);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    for (let global = 0; global < 9; ++global) {\n        let globalRow = Math.floor(global / 3);\n        let globalCol = global % 3;\n\n        let globalX = boardOffsetLeft + (globalSize + globalPadding) * globalCol;\n        let globalY = boardOffsetTop + (globalSize + globalPadding) * globalRow;\n\n        // グローバルボードが取られている場合.\n        if (board.whoGotGlobal(global) > 0) {\n            ctx.lineWidth = globalLineWidth;\n            ctx.strokeStyle = \"orange\";\n            ctx.beginPath();\n            ctx.moveTo(globalX + globalGridWidth / 2, globalY + globalGridWidth / 2);\n            ctx.lineTo(globalX + globalSize - globalGridWidth / 2, globalY + globalSize - globalGridWidth / 2);\n            ctx.stroke();\n            ctx.closePath();\n            ctx.beginPath();\n            ctx.moveTo(globalX + globalSize - globalGridWidth / 2, globalY + globalGridWidth / 2);\n            ctx.lineTo(globalX + globalGridWidth / 2, globalY + globalSize - globalGridWidth / 2);\n            ctx.stroke();\n            ctx.closePath();\n            continue;\n        } else if (board.whoGotGlobal(global) < 0) {\n            ctx.lineWidth = globalLineWidth;\n            ctx.strokeStyle = \"dodgerblue\";\n            ctx.beginPath();\n            ctx.arc(globalX + globalSize / 2, globalY + globalSize / 2, (globalSize - globalGridWidth) / 2, 0, Math.PI * 2);\n            ctx.stroke();\n            ctx.closePath();\n            continue;\n        }\n\n        // グローバルボードが取られていない場合.\n        const isLegal = board.isLegalGlobal(global);\n        ctx.lineWidth = localGridWidth;\n        if (isLegal) {\n            ctx.strokeStyle = \"white\";\n        } else {\n            ctx.strokeStyle = \"darkgray\";\n        }\n        // 横線\n        for (let row = 1; row < 3; ++row) {\n            let y = globalY + (localSize + localPadding) * row - localPadding / 2;\n            ctx.beginPath();\n            ctx.moveTo(globalX, y);\n            ctx.lineTo(globalX + localSize * 3 + localPadding * 2, y);\n            ctx.stroke();\n            ctx.closePath();\n        }\n        // 縦線\n        for (let col = 1; col < 3; ++col) {\n            let x = globalX + (localSize + localPadding) * col - localPadding / 2;\n            ctx.beginPath();\n            ctx.moveTo(x, globalY);\n            ctx.lineTo(x, globalY + localSize * 3 + localPadding * 2);\n            ctx.stroke();\n            ctx.closePath();\n        }\n\n        // マーク\n        ctx.lineWidth = localLineWidth;\n        for (let local = 0; local < 9; ++local) {\n            let localRow = Math.floor(local / 3);\n            let localCol = local % 3;\n\n            let localX = globalX + (localSize + localPadding) * localCol;\n            let localY = globalY + (localSize + localPadding) * localRow;\n            if (board.whoGot(global, local) > 0) {\n                if (isLegal) {\n                    ctx.strokeStyle = \"orange\";\n                } else {\n                    ctx.strokeStyle = \"#775200\";\n                }\n                ctx.beginPath();\n                ctx.moveTo(localX + localGridWidth / 2, localY + localGridWidth / 2);\n                ctx.lineTo(localX + localSize - localGridWidth / 2, localY + localSize - localGridWidth / 2);\n                ctx.stroke();\n                ctx.closePath();\n                ctx.beginPath();\n                ctx.moveTo(localX + localSize - localGridWidth / 2, localY + localGridWidth / 2);\n                ctx.lineTo(localX + localGridWidth / 2, localY + localSize - localGridWidth / 2);\n                ctx.stroke();\n                ctx.closePath();\n            } else if (board.whoGot(global, local) < 0) {\n                if (isLegal) {\n                    ctx.strokeStyle = \"dodgerblue\";\n                } else {\n                    ctx.strokeStyle = \"#0c4877\";\n                }\n                ctx.beginPath();\n                ctx.arc(localX + localSize / 2, localY + localSize / 2, (localSize - localGridWidth) / 2, 0, Math.PI * 2);\n                ctx.stroke();\n                ctx.closePath()\n            }\n        }\n    }\n}\n\nfunction draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawBoard();\n}\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);